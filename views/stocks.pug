html
    head
        link(rel="stylesheet" type="text/css" href="/stylesheets/style.css")
        script(src="/js/stocks.js")

    body
        .ripple-background
            .circle.xxlarge.shade1
            .circle.xlarge.shade2
            .circle.large.shade3
            .circle.mediun.shade4
            .circle.small.shade5

        div
            h1#result #{result}

        div#parentInput
            h1 Watchlist name: #{JSON.parse(result).name}
            div#Input
                input#myInput(type='text',list='fullUL', onkeyup='searchHandler()', placeholder='Search for names..')
                button#add
                    svg(version='1.1', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', viewBox='0 0 16 16', style='enable-background:new 0 0 16 16;', xml:space='preserve')
                        g
                            path.fill(d='M16,8c0,0.5-0.5,1-1,1H9v6c0,0.5-0.5,1-1,1s-1-0.5-1-1V9H1C0.5,9,0,8.5,0,8s0.5-1,1-1h6V1c0-0.5,0.5-1,1-1s1,0.5,1,1v6h6C15.5,7,16,7.5,16,8z')

            datalist#fullUL

            div#Stocks
                ul.todo#added
            button(onclick="updateDB()")#update UPDATE



    script.
        var removeSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve"><rect class="noFill" width="22" height="22"/><g><g><path class="fill" d="M16.1,3.6h-1.9V3.3c0-1.3-1-2.3-2.3-2.3h-1.7C8.9,1,7.8,2,7.8,3.3v0.2H5.9c-1.3,0-2.3,1-2.3,2.3v1.3c0,0.5,0.4,0.9,0.9,1v10.5c0,1.3,1,2.3,2.3,2.3h8.5c1.3,0,2.3-1,2.3-2.3V8.2c0.5-0.1,0.9-0.5,0.9-1V5.9C18.4,4.6,17.4,3.6,16.1,3.6z M9.1,3.3c0-0.6,0.5-1.1,1.1-1.1h1.7c0.6,0,1.1,0.5,1.1,1.1v0.2H9.1V3.3z M16.3,18.7c0,0.6-0.5,1.1-1.1,1.1H6.7c-0.6,0-1.1-0.5-1.1-1.1V8.2h10.6V18.7z M17.2,7H4.8V5.9c0-0.6,0.5-1.1,1.1-1.1h10.2c0.6,0,1.1,0.5,1.1,1.1V7z"/></g><g><g><path class="fill" d="M11,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6s0.6,0.3,0.6,0.6v6.8C11.6,17.7,11.4,18,11,18z"/></g><g><path class="fill" d="M8,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v6.8C8.7,17.7,8.4,18,8,18z"/></g><g><path class="fill" d="M14,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v6.8C14.6,17.7,14.3,18,14,18z"/></g></g></g></svg>';
        var viewSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve"><rect y="0" class="noFill" width="22" height="22"/><g><path class="fill" d="M9.7,14.4L9.7,14.4c-0.2,0-0.4-0.1-0.5-0.2l-2.7-2.7c-0.3-0.3-0.3-0.8,0-1.1s0.8-0.3,1.1,0l2.1,2.1l4.8-4.8c0.3-0.3,0.8-0.3,1.1,0s0.3,0.8,0,1.1l-5.3,5.3C10.1,14.3,9.9,14.4,9.7,14.4z"/></g></svg>';

        let data_json = JSON.parse(document.getElementById('result').innerText);
        let data = {assets: data_json.assets, _id: data_json._id, name: data_json.name};
        let current_data = [];
        for(let i = 0; i < data.assets.length; i++){
            addItemToDOM(data.assets[i]);
        }
        console.log(data_json);
        function searchHandler() {
            let url = '/stock' + document.getElementById('myInput').value;
            let request = new Request(url, {
                method: 'GET',
                headers: {'Content-Type': 'application/json'}
            });

            fetch(request)
                .then(function (response) {
                    return response.json();
                })
                .then(function (res) {
                    let ul = document.getElementById("fullUL");
                        ul.innerHTML = '';
                    let option, a;
                    for(let i = 0; i < res.sorted.length; i++) {
                        option = document.createElement('option');
                        a = document.createElement('a');
                        a.innerText = res.sorted[i].choice;
                        option.value = res.sorted[i].choice;
                        console.log("Im here");
                        ul.appendChild(option);
                    }
                })
        }


        document.getElementById('add').addEventListener('click', function () {
            var value = document.getElementById('myInput').value;
            if (value) {
                console.log('Button clicked');
                addItemToDOM(value);
            }
        });

        function addItemToDOM(text) {
            var list = document.getElementById('added');

            var item = document.createElement('li');
            item.innerText = text;

            var buttons = document.createElement('div');
            buttons.classList.add('buttons');

            var remove = document.createElement('button');
            remove.classList.add('remove');
            remove.innerHTML = removeSVG;

            var view_stock = document.createElement('button');
            view_stock.classList.add('viewStock');
            view_stock.innerHTML = viewSVG;

            // Add click event for removing the item
            remove.addEventListener('click', removeItem);
            // Add click event for viewing the item
            view_stock.addEventListener('click', detailsPageHandler)

            if(data.assets.indexOf(text) === -1 && current_data.indexOf(text) === -1) {
                console.log('heshd');
                buttons.appendChild(remove);
                buttons.appendChild(view_stock)
                item.appendChild(buttons);
                list.insertBefore(item, list.childNodes[0]);
                current_data.push(text);
                data.assets.push(text);
            }
            else if(data.assets.indexOf(text) > -1 && current_data.indexOf(text) === -1){
                buttons.appendChild(remove);
                buttons.appendChild(view_stock)
                item.appendChild(buttons);
                list.insertBefore(item, list.childNodes[0]);
                current_data.push(text);
            }
            else if(data.assets.indexOf(text) > -1 && current_data.indexOf(text) > -1){
                let message = 'The stock with name: ' + text + " is already in the list!";
                console.log(message);
                alert(message);
            }
        }

        function removeItem() {
            var item = this.parentNode.parentNode;
            var parent = item.parentNode;
            var id = parent.id;
            var value = item.innerText;
            data.assets.splice(data.assets.indexOf(value), 1);
            current_data.splice(current_data.indexOf(value), 1);
            parent.removeChild(item);
            console.log(data.assets);
        }

        function detailsPageHandler() {
            console.log('Button cliceksadf')
            let stock_symbol = 'aapl';
            let url = 'http://localhost:3000/details?stock_symbol=' + stock_symbol;
            window.location.assign(url);
        }

        function updateDB() {
            console.log(data);
            let url = '/stock/' + data._id;
            let request = new Request(url, {
                method: 'PUT',
                body: JSON.stringify(data),
                headers: {'Content-Type': 'application/json'}
            });

            fetch(request)
                .then(function (response) {
                    return response.json()
                })
                .then(function (res) {
                    return alert(res.message)
                });
        }


